{
  "slides": [
    {
      "content": "Explore the importance of version control and how Git revolutionizes software development.",
      "slideNumber": 1,
      "title": "Welcome to Version Control 101",
      "type": "title_slide",
      "subtitle": "Mastering Git for Collaborative Development",
      "transition": "slide_up",
      "voiceover": "Welcome to Version Control 101! In this module, you'll learn about version control systems and how Git revolutionizes software development."
    },
    {
      "content": "Version control is a system that records changes to a file or set of files over time so that you can recall specific versions later.",
      "slideNumber": 2,
      "title": "What is Version Control?",
      "type": "content_slide",
      "transition": "slide_left",
      "voiceover": "Version control is a system that records changes to a file or set of files over time. It allows you to recall specific versions later, which is crucial for collaboration and managing code."
    },
    {
      "points": [
        "Collaboration"
      ],
      "slideNumber": 3,
      "title": "Benefits of Version Control",
      "type": "unordered_list_slide",
      "transition": "slide_right",
      "voiceover": "Version control enables seamless collaboration among developers."
    },
    {
      "points": [
        "Collaboration",
        "Backup and Restore"
      ],
      "slideNumber": 4,
      "title": "Benefits of Version Control",
      "type": "unordered_list_slide",
      "transition": "slide_right",
      "voiceover": "It also acts as a backup, allowing you to restore previous versions of your code."
    },
    {
      "points": [
        "Collaboration",
        "Backup and Restore",
        "Change Tracking"
      ],
      "slideNumber": 5,
      "title": "Benefits of Version Control",
      "type": "unordered_list_slide",
      "transition": "slide_right",
      "voiceover": "Furthermore, version control provides clear change tracking, making it easy to identify who made what changes and when."
    },
    {
      "content": "Git is a distributed version control system for tracking changes in source code during software development. It is designed for coordinating work among programmers, but it can be used to track changes in any set of files.",
      "slideNumber": 6,
      "title": "Introduction to Git",
      "type": "content_slide",
      "transition": "slide_left",
      "voiceover": "Git is a distributed version control system widely used for tracking changes in source code and coordinating work among programmers."
    },
    {
      "code": "# Initialize a new Git repository\ngit init\n\n# Add files to the staging area\ngit add .\n\n# Commit the changes with a message\ngit commit -m \"Initial commit\"",
      "slideNumber": 7,
      "title": "Basic Git Commands",
      "type": "code_slide",
      "lexer": "bash",
      "transition": "slide_right",
      "voiceover": "Here are some basic Git commands to get you started: git init initializes a new repository, git add adds files to the staging area, and git commit saves the changes with a descriptive message."
    },
    {
      "code": "# Create a new branch\ngit branch feature/new-feature\n\n# Switch to the new branch\ngit checkout feature/new-feature\n\n# Merge changes from feature branch to main\ngit checkout main\ngit merge feature/new-feature",
      "slideNumber": 8,
      "title": "Branching and Merging",
      "type": "code_slide",
      "lexer": "bash",
      "transition": "slide_right",
      "voiceover": "Branching allows you to work on new features or bug fixes in isolation. Use git branch to create a new branch, git checkout to switch to it, and git merge to integrate the changes back into the main branch."
    },
    {
      "code": "# Clone a remote repository\ngit clone <repository_url>\n\n# Push local changes to remote repository\ngit push origin <branch_name>\n\n# Pull latest changes from remote repository\ngit pull origin <branch_name>",
      "slideNumber": 9,
      "title": "Remote Repositories",
      "type": "code_slide",
      "lexer": "bash",
      "transition": "slide_right",
      "voiceover": "Git also supports remote repositories, allowing you to collaborate with others. Use git clone to copy a remote repository, git push to upload your local changes, and git pull to download the latest updates."
    },
    {
      "options": [
        "To track changes to files over time",
        "To compile code",
        "To run tests",
        "To deploy applications"
      ],
      "question": "What is the primary purpose of version control?",
      "slideNumber": 10,
      "title": "Quiz Time!",
      "type": "quiz_slide",
      "transition": "slide_down",
      "voiceover": "Let's check your understanding. What is the primary purpose of version control?"
    },
    {
      "content": "The correct answer is: To track changes to files over time. Version control systems are designed to record changes to a file or set of files over time so that you can recall specific versions later.",
      "slideNumber": 11,
      "title": "Answer and Explanation",
      "type": "content_slide",
      "transition": "slide_left",
      "voiceover": "The primary purpose of version control is to track changes to files over time, enabling you to revert to previous versions and collaborate effectively."
    },
    {
      "content": "Git simplifies collaboration and enables efficient management of code changes. Understanding Git is essential for modern software development.",
      "slideNumber": 12,
      "title": "Key Takeaways",
      "type": "content_slide",
      "transition": "slide_left",
      "voiceover": "In summary, Git simplifies collaboration and enables efficient management of code changes. Mastering Git is crucial for modern software development."
    },
    {
      "chartType": "bar",
      "data": [
        {
          "label": "Commits",
          "value": 50
        },
        {
          "label": "Branches",
          "value": 10
        },
        {
          "label": "Merges",
          "value": 5
        }
      ],
      "slideNumber": 13,
      "title": "Git Activity Metrics",
      "type": "chart_slide",
      "transition": "slide_left",
      "voiceover": "This chart illustrates typical Git activity metrics, showing the number of commits, branches, and merges in a project.",
      "xLabel": "Activity",
      "yLabel": "Count"
    }
  ]
}